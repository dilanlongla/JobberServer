package com.haibasoft.jobber.entities;
// Generated 01-Sep-2020 05:26:07 by Hibernate Tools 4.3.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * Jobseeker generated by hbm2java
 */
@Entity
@Table(name = "jobseeker")
public class Jobseeker implements java.io.Serializable {

	private String id;
	private String firstName;
	private String lastName;
	private String email;
	private String password;
	private Integer phoneNumber;
	private String linkedin;
	private String facebook;
	private String twitter;
	private String website;
	private String resume;
	private Date dob;
	private String gender;
	private String profilePhoto;
	private String code;
	private String country;
	private String town;
	private String street;
	private Set<Certifications> certificationses = new HashSet<Certifications>(0);
	private Set<Offerseeker> offerseekers = new HashSet<Offerseeker>(0);
	private Set<Education> educations = new HashSet<Education>(0);
	private Set<Experience> experiences = new HashSet<Experience>(0);
	private Set<Languagespoken> languagespokens = new HashSet<Languagespoken>(0);

	public Jobseeker() {
	}

	public Jobseeker(String id) {
		this.id = id;
	}

	public Jobseeker(String id, String firstName, String lastName, String email, String password, Integer phoneNumber,
			String linkedin, String facebook, String twitter, String website, String resume, Date dob, String gender,
			String profilePhoto, String code, String country, String town, String street,
			Set<Certifications> certificationses, Set<Offerseeker> offerseekers, Set<Education> educations,
			Set<Experience> experiences, Set<Languagespoken> languagespokens) {
		this.id = id;
		this.firstName = firstName;
		this.lastName = lastName;
		this.email = email;
		this.password = password;
		this.phoneNumber = phoneNumber;
		this.linkedin = linkedin;
		this.facebook = facebook;
		this.twitter = twitter;
		this.website = website;
		this.resume = resume;
		this.dob = dob;
		this.gender = gender;
		this.profilePhoto = profilePhoto;
		this.code = code;
		this.country = country;
		this.town = town;
		this.street = street;
		this.certificationses = certificationses;
		this.offerseekers = offerseekers;
		this.educations = educations;
		this.experiences = experiences;
		this.languagespokens = languagespokens;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false, length = 64)
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@Column(name = "firstName")
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "lastName", length = 254)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "email", length = 254)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "password", length = 254)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "phoneNumber")
	public Integer getPhoneNumber() {
		return this.phoneNumber;
	}

	public void setPhoneNumber(Integer phoneNumber) {
		this.phoneNumber = phoneNumber;
	}

	@Column(name = "linkedin", length = 254)
	public String getLinkedin() {
		return this.linkedin;
	}

	public void setLinkedin(String linkedin) {
		this.linkedin = linkedin;
	}

	@Column(name = "facebook", length = 254)
	public String getFacebook() {
		return this.facebook;
	}

	public void setFacebook(String facebook) {
		this.facebook = facebook;
	}

	@Column(name = "twitter", length = 254)
	public String getTwitter() {
		return this.twitter;
	}

	public void setTwitter(String twitter) {
		this.twitter = twitter;
	}

	@Column(name = "website", length = 254)
	public String getWebsite() {
		return this.website;
	}

	public void setWebsite(String website) {
		this.website = website;
	}

	@Column(name = "resume", length = 254)
	public String getResume() {
		return this.resume;
	}

	public void setResume(String resume) {
		this.resume = resume;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dob", length = 19)
	public Date getDob() {
		return this.dob;
	}

	public void setDob(Date dob) {
		this.dob = dob;
	}

	@Column(name = "gender", length = 254)
	public String getGender() {
		return this.gender;
	}

	public void setGender(String gender) {
		this.gender = gender;
	}

	@Column(name = "profilePhoto", length = 254)
	public String getProfilePhoto() {
		return this.profilePhoto;
	}

	public void setProfilePhoto(String profilePhoto) {
		this.profilePhoto = profilePhoto;
	}

	@Column(name = "code", length = 254)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "country", length = 254)
	public String getCountry() {
		return this.country;
	}

	public void setCountry(String country) {
		this.country = country;
	}

	@Column(name = "town", length = 254)
	public String getTown() {
		return this.town;
	}

	public void setTown(String town) {
		this.town = town;
	}

	@Column(name = "street", length = 254)
	public String getStreet() {
		return this.street;
	}

	public void setStreet(String street) {
		this.street = street;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jobseeker")
	@JsonManagedReference(value = "jobseekercertification")
	public Set<Certifications> getCertificationses() {
		return this.certificationses;
	}

	public void setCertificationses(Set<Certifications> certificationses) {
		this.certificationses = certificationses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jobseeker")
	@JsonManagedReference
	public Set<Offerseeker> getOfferseekers() {
		return this.offerseekers;
	}

	public void setOfferseekers(Set<Offerseeker> offerseekers) {
		this.offerseekers = offerseekers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jobseeker")
	@JsonManagedReference(value = "jobseekereducation")
	public Set<Education> getEducations() {
		return this.educations;
	}

	public void setEducations(Set<Education> educations) {
		this.educations = educations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jobseeker")
	@JsonManagedReference(value = "jobseekerexperience")
	public Set<Experience> getExperiences() {
		return this.experiences;
	}

	public void setExperiences(Set<Experience> experiences) {
		this.experiences = experiences;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jobseeker")
	@JsonManagedReference(value = "languagespokenjobseeker")
	public Set<Languagespoken> getLanguagespokens() {
		return this.languagespokens;
	}

	public void setLanguagespokens(Set<Languagespoken> languagespokens) {
		this.languagespokens = languagespokens;
	}

}
